{"version":3,"sources":["./src/app/shared/pipes/slugify.pipe.ts","./src/environments/environment.ts","./src/app/shared/services/auth.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/interceptors/loading.interceptor.ts","./src/app/shared/interceptors/error.interceptor.ts","./src/app/shared/services/spinner.service.ts","./src/app/shared/interceptors/jwt.interceptor.ts","./src/app/shared/services/toastr.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'slugify'\n})\nexport class SlugifyPipe implements PipeTransform {\n\n  removeAcento(value: string) {\n    let text = value.toLowerCase();\n\n    text = text.replace(new RegExp('[ÁÀÂÃ]', 'gi'), 'a');\n    text = text.replace(new RegExp('[ÉÈÊ]', 'gi'), 'e');\n    text = text.replace(new RegExp('[ÍÌÎ]', 'gi'), 'i');\n    text = text.replace(new RegExp('[ÓÒÔÕÖ]', 'gi'), 'o');\n    text = text.replace(new RegExp('[ÚÙÛÜ]', 'gi'), 'u');\n    text = text.replace(new RegExp('[Ç]', 'gi'), 'c');\n    text = text.replace(new RegExp('[Ə]', 'gi'), 'e');\n    text = text.replace(new RegExp('[Ş]', 'gi'), 's');\n\n    return text;\n  }\n\n  transform(value: string): string {\n    let response = value.toString().toLowerCase();\n    response = this.removeAcento(value).trim()\n      .replace(/\\s+/g, '-') // Replace spaces with -\n      .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n      .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n      .replace(/^-+/, '') // Trim - from start of text\n      .replace(/-+$/, ''); // Trim - from end of text\n\n    return response;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'http://localhost:5000/api/v1'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\nimport { map } from 'rxjs/operators';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private baseUrl = environment.api;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  public currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient,  private router: Router) {\r\n    this.currentUser$.pipe(map(user => console.log(user)));\r\n  }\r\n\r\n  public login(email: string, password: string) {\r\n    return this.http\r\n      .post<User>(`${this.baseUrl}/auth/login`, {\r\n        email,\r\n        password,\r\n      })\r\n      .pipe(\r\n        map((response: User) => {\r\n          const user = response;\r\n          if (user) {\r\n            this.setCurrentUser(user);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    localStorage.setItem(`${user.role}`, JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout(user: User) {\r\n    localStorage.removeItem(`${user.role}`);\r\n    this.currentUserSource.next(undefined);\r\n    this.router.navigate(['/auth/login']);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserRole } from './shared/enums/userRole.enum';\r\nimport { User } from './shared/models/user';\r\nimport { AuthService } from './shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private user!: User;\r\n  title = 'Doccure';\r\n\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const admin = localStorage.getItem('Admin');\r\n    const doctor = localStorage.getItem('Doctor');\r\n    const patient = localStorage.getItem('Patient');\r\n\r\n    if (admin) {\r\n      this.user = admin !== null ? JSON.parse(admin) : null;\r\n    } else if(doctor) {\r\n      this.user = doctor !== null ? JSON.parse(doctor) : null;\r\n    } else if (patient) {\r\n      this.user = patient !== null ? JSON.parse(patient) : null;\r\n    }\r\n\r\n    if (this.user) {\r\n      this.auth.setCurrentUser(this.user);\r\n    }\r\n\r\n    console.log(this.user);\r\n  }\r\n}\r\n","<ngx-spinner>\r\n  <h3>Loading...</h3>\r\n</ngx-spinner>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SlugifyPipe } from './shared/pipes/slugify.pipe';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ErrorInterceptor } from './shared/interceptors/error.interceptor';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './shared/interceptors/loading.interceptor';\r\nimport { JwtInterceptor } from './shared/interceptors/jwt.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, SlugifyPipe],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot(),\r\n    NgxSpinnerModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtInterceptor,\r\n      multi: true,\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SpinnerService } from '../services/spinner.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private spinner: SpinnerService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.spinner.busy();\n\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.spinner.idle();\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from '../services/toastr.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                    modalStateErrors.map(err => this.toastr.warning(err, 'Info'));\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof error.error === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/errors/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/errors/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong', 'Error');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpinnerService {\n  public busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {}\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333',\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { catchError, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private accountService: AuthService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      if (user) {\r\n        request = request.clone({\r\n          setHeaders: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        });\r\n      }\r\n    });\r\n\r\n    return next.handle(request).pipe(\r\n      catchError((err: Observable<HttpEvent<any>>) => {\r\n        if (err instanceof HttpErrorResponse && err.status === 401) {\r\n          return of(err as any);\r\n        }\r\n\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ToastrService as Toast } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastrService {\n  constructor(private toastr: Toast) {}\n\n  private toastBody(): any {\n    return {\n      timeOut: 3000,\n      positionClass: 'toast-bottom-right',\n      closeButton: true,\n      progressBar: true,\n      progressAnimation: 'increasing',\n      easing: '500',\n      easeTime: '500',\n      enableHtml: true,\n    };\n  }\n\n  public success(message: string, title: string) {\n    this.toastr.success(message, title, this.toastBody());\n  }\n\n  public info(message: string, title: string) {\n    this.toastr.info(message, title, this.toastBody());\n  }\n\n  public warning(message: string, title: string) {\n    this.toastr.warning(message, title, this.toastBody());\n  }\n\n  public error(message: string, title: string) {\n    this.toastr.error(message, title, this.toastBody());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', loadChildren: () => import('./views/views.module').then(x => x.ViewsModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}