{"version":3,"sources":["./src/app/views/main/blog/blog.component.html","./src/app/views/main/blog/blog.component.ts","./src/app/shared/components/blog-sidebar/blog-sidebar.component.html","./src/app/shared/components/blog-sidebar/blog-sidebar.component.ts","./src/app/views/main/blog/details/details.component.html","./src/app/views/main/blog/details/details.component.ts","./node_modules/ngx-bootstrap/__ivy_ngcc__/pagination/fesm2015/ngx-bootstrap-pagination.js","./src/app/shared/pipes/url-sanitizer.pipe.ts","./src/app/views/main/blog/list/list.component.html","./src/app/views/main/blog/blog-routing.module.ts","./src/app/views/main/blog/list/list.component.ts","./src/app/views/main/blog/blog.module.ts"],"names":["BlogComponent","main","blogs","pageNumber","pageSize","this","apiResponse","getBlogList","subscribe","response","pagination","result","component","BlogSidebarComponent","DetailsComponent","route","router","routeReuseStrategy","shouldReuseRoute","slug","snapshot","paramMap","get","getBlog","forEach","blog","a0","a1","_c2","disabled","currentPage","PaginationComponent_li_1_Template","rf","ctx","_r16","$event","selectPage","ctx_r0","_r11","noPrevious","customFirstTemplate","page","PaginationComponent_li_2_Template","_r18","ctx_r17","ctx_r1","_r9","customPreviousTemplate","_c3","a2","$implicit","PaginationComponent_li_3_Template","_r21","pg_r19","number","ctx_r2","_r5","active","customPageTemplate","PaginationComponent_li_4_Template","_r23","ctx_r22","ctx_r3","_r7","noNext","customNextTemplate","PaginationComponent_li_5_Template","_r25","ctx_r24","totalPages","ctx_r4","_r13","customLastTemplate","PaginationComponent_ng_template_6_Template","text","PaginationComponent_ng_template_8_Template","ctx_r8","getText","PaginationComponent_ng_template_10_Template","ctx_r10","PaginationComponent_ng_template_12_Template","ctx_r12","PaginationComponent_ng_template_14_Template","ctx_r14","PaginationConfig","maxSize","itemsPerPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","pageBtnClass","rotate","pager","align","ɵfac","t","ɵprov","factory","token","providedIn","PAGER_CONTROL_VALUE_ACCESSOR","provide","useExisting","multi","PagerComponent","elementRef","paginationConfig","changeDetection","numPages","pageChanged","onChange","Function","prototype","onTouched","inited","_page","config","configureOptions","Object","assign","_itemsPerPage","v","calculateTotalPages","_totalItems","_totalPages","emit","value","_previous","markForCheck","window","classMap","nativeElement","getAttribute","pages","getPages","key","fn","event","preventDefault","target","blur","writeValue","num","startPage","endPage","isMaxSized","Math","max","floor","ceil","min","makePage","toString","push","previousPageSet","unshift","nextPageSet","totalItems","ɵcmp","type","selectors","inputs","outputs","features","decls","vars","consts","template","directives","encapsulation","PAGINATION_CONTROL_VALUE_ACCESSOR","PaginationComponent","PaginationModule","ngModule","providers","ɵmod","ɵinj","imports","UrlSanitizerPipe","sanitizer","url","bypassSecurityTrustResourceUrl","routes","path","children","ListComponent","mainService","changeDetectorRef","x","inserHTML","loadPage","detectChanges","blogDescription","toArray","desc","insertAdjacentHTML","description","substr","BlogRoutingModule","forChild","BlogModule","forRoot"],"mappings":"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","file":"10.9aa24e50b188cf219a0d.js","sourcesContent":["<router-outlet\r\n  *ngIf=\"blogs.length !== 0\"\r\n  (activate)=\"onBlogListPageLoaded($event)\"\r\n  (activate)=\"onBlogListPageLoaded($event)\"\r\n></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Blog } from 'src/app/shared/models/blog';\r\nimport { PaginatedResult, Pagination } from 'src/app/shared/models/pagination';\r\nimport { MainService } from 'src/app/shared/services/main.service';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\n@Component({\r\n  selector: 'app-blog',\r\n  templateUrl: './blog.component.html',\r\n})\r\nexport class BlogComponent implements OnInit {\r\n  public blogs: Blog[] = [];\r\n  private pageNumber = 1;\r\n  private pageSize = 2;\r\n  private pagination: Pagination;\r\n\r\n  constructor(private main: MainService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.apiResponse();\r\n  }\r\n\r\n  private apiResponse() {\r\n    this.main.getBlogList(this.pageNumber, this.pageSize).subscribe((response: PaginatedResult<Blog[]>) => {\r\n      this.pagination = response.pagination;\r\n      this.blogs = response.result;\r\n    });\r\n  }\r\n\r\n  public onBlogListPageLoaded(component: ListComponent) {\r\n    component.blogs = this.blogs;\r\n    component.pagination = this.pagination;\r\n  }\r\n\r\n  public onBlogDetailsPageLoaded(component: DetailsComponent) {\r\n    component.blogs = this.blogs;\r\n  }\r\n}\r\n","<!-- Search -->\r\n  <div class=\"card search-widget\">\r\n    <div class=\"card-body\">\r\n      <form class=\"search-form\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" placeholder=\"Search...\" class=\"form-control\">\r\n          <div class=\"input-group-append\">\r\n            <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fa fa-search\"></i></button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- /Search -->\r\n\r\n  <!-- Latest Posts -->\r\n  <div class=\"card post-widget\">\r\n    <div class=\"card-header\">\r\n      <h4 class=\"card-title\">Latest Posts</h4>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <ul class=\"latest-posts\">\r\n        <li *ngFor=\"let item of blogs\">\r\n          <div class=\"post-thumb\">\r\n            <a [routerLink]=\"['/main/blog/details', item.slug]\">\r\n              <img class=\"img-fluid\" src={{item.photo}} alt={{item.title}}>\r\n            </a>\r\n          </div>\r\n          <div class=\"post-info\">\r\n            <h4>\r\n              <a [routerLink]=\"['/main/blog/details', item.slug]\">{{item.title}}</a>\r\n            </h4>\r\n            <p>4 Dec 2019</p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <!-- /Latest Posts -->\r\n\r\n  <!-- Categories -->\r\n  <div class=\"card category-widget\">\r\n    <div class=\"card-header\">\r\n      <h4 class=\"card-title\">Blog Categories</h4>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <ul class=\"categories\">\r\n        <li><a href=\"#\">Cardiology <span>(62)</span></a></li>\r\n        <li><a href=\"#\">Health Care <span>(27)</span></a></li>\r\n        <li><a href=\"#\">Nutritions <span>(41)</span></a></li>\r\n        <li><a href=\"#\">Health Tips <span>(16)</span></a></li>\r\n        <li><a href=\"#\">Medical Research <span>(55)</span></a></li>\r\n        <li><a href=\"#\">Health Treatment <span>(07)</span></a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <!-- /Categories -->\r\n\r\n  <!-- Tags -->\r\n  <div class=\"card tags-widget\">\r\n    <div class=\"card-header\">\r\n      <h4 class=\"card-title\">Tags</h4>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <ul class=\"tags\">\r\n        <li><a href=\"#\" class=\"tag\">Children</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Disease</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Appointment</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Booking</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Kids</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Health</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Family</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Tips</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Shedule</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Treatment</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Dr</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Clinic</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Online</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Health Care</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Consulting</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Doctors</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Neurology</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Dentists</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Specialist</a></li>\r\n        <li><a href=\"#\" class=\"tag\">Doccure</a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <!-- /Tags -->","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Blog } from '../../models/blog';\r\n\r\n@Component({\r\n  selector: 'app-blog-sidebar',\r\n  templateUrl: './blog-sidebar.component.html',\r\n})\r\nexport class BlogSidebarComponent implements OnInit {\r\n  @Input() blogs: Blog[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<app-main-breadcrumb [title]=\"'Blog Details'\"></app-main-breadcrumb>\r\n<!-- Page Content -->\r\n<div class=\"content\">\r\n  <div class=\"container\">\r\n\r\n    <div *ngIf=\"blogs.length !== 0\" class=\"row\">\r\n      <div *ngIf=\"blog\" class=\"col-lg-8 col-md-12\">\r\n        <div class=\"blog-view\">\r\n          <div class=\"blog blog-single-post\">\r\n            <div class=\"blog-image\">\r\n              <a href=\"javascript:void(0);\"><img alt={{blog.title}} src={{blog.photo}} class=\"img-fluid\"></a>\r\n            </div>\r\n            <h3 class=\"blog-title\">{{blog.title}}</h3>\r\n            <div class=\"blog-info clearfix\">\r\n              <div class=\"post-left\">\r\n                <ul>\r\n                  <li>\r\n                    <div class=\"post-author\">\r\n                      <a [routerLink]=\"['/']\"><img src={{blog.doctor?.photo}} alt={{blog.doctor?.fullname}}>\r\n                        <span>Dr. {{blog.doctor?.fullname}}</span></a>\r\n                    </div>\r\n                  </li>\r\n                  <li><i class=\"far fa-calendar\"></i>4 Dec 2019</li>\r\n                  <li><i class=\"far fa-comments\"></i>12 Comments</li>\r\n                  <li><i class=\"fa fa-tags\"></i>Health Tips</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"blog-content\" [innerHTML]=\"blog.description\"></div>\r\n\r\n          <div class=\"card blog-share clearfix\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Share the post</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <ul class=\"social-share\">\r\n                <li><a href=\"#\" title=\"Facebook\"><i class=\"fab fa-facebook\"></i></a></li>\r\n                <li><a href=\"#\" title=\"Twitter\"><i class=\"fab fa-twitter\"></i></a></li>\r\n                <li><a href=\"#\" title=\"Linkedin\"><i class=\"fab fa-linkedin\"></i></a></li>\r\n                <li><a href=\"#\" title=\"Google Plus\"><i class=\"fab fa-google-plus\"></i></a></li>\r\n                <li><a href=\"#\" title=\"Youtube\"><i class=\"fab fa-youtube\"></i></a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"card author-widget clearfix\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">About Author</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"about-author\">\r\n                <div class=\"about-author-img\">\r\n                  <div class=\"author-img-wrap\">\r\n                    <a [routerLink]=\"['/main/patient/doctor-profile', blog.doctor?.slug]\"><img class=\"img-fluid rounded-circle\" alt={{blog.doctor?.fullname}}\r\n                        src={{blog.doctor?.photo}}></a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"author-details\">\r\n                  <a [routerLink]=\"['/']\" class=\"blog-author-name\">Dr. {{blog.doctor?.fullname}}</a>\r\n                  <p class=\"mb-0\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n                    incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card blog-comments clearfix\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Comments (12)</h4>\r\n            </div>\r\n            <div class=\"card-body pb-0\">\r\n              <ul class=\"comments-list\">\r\n                <li>\r\n                  <div class=\"comment\">\r\n                    <div class=\"comment-author\">\r\n                      <img class=\"avatar\" alt=\"\" src=\"assets/img/patients/patient4.jpg\">\r\n                    </div>\r\n                    <div class=\"comment-block\">\r\n                      <span class=\"comment-by\">\r\n                        <span class=\"blog-author-name\">Michelle Fairfax</span>\r\n                      </span>\r\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida\r\n                        pellentesque urna varius vitae, gravida pellentesque urna varius vitae. Lorem ipsum dolor sit\r\n                        amet, consectetur adipiscing elit.</p>\r\n                      <p class=\"blog-date\">Dec 6, 2017</p>\r\n                      <a class=\"comment-btn\" href=\"#\">\r\n                        <i class=\"fas fa-reply\"></i> Reply\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <ul class=\"comments-list reply\">\r\n                    <li>\r\n                      <div class=\"comment\">\r\n                        <div class=\"comment-author\">\r\n                          <img class=\"avatar\" alt=\"\" src=\"assets/img/patients/patient5.jpg\">\r\n                        </div>\r\n                        <div class=\"comment-block\">\r\n                          <span class=\"comment-by\">\r\n                            <span class=\"blog-author-name\">Gina Moore</span>\r\n                          </span>\r\n                          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida\r\n                            pellentesque urna varius vitae, gravida pellentesque urna varius vitae.</p>\r\n                          <p class=\"blog-date\">Dec 6, 2017</p>\r\n                          <a class=\"comment-btn\" href=\"#\">\r\n                            <i class=\"fas fa-reply\"></i> Reply\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div class=\"comment\">\r\n                        <div class=\"comment-author\">\r\n                          <img class=\"avatar\" alt=\"\" src=\"assets/img/patients/patient3.jpg\">\r\n                        </div>\r\n                        <div class=\"comment-block\">\r\n                          <span class=\"comment-by\">\r\n                            <span class=\"blog-author-name\">Carl Kelly</span>\r\n                          </span>\r\n                          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida\r\n                            pellentesque urna varius vitae, gravida pellentesque urna varius vitae.</p>\r\n                          <p class=\"blog-date\">December 7, 2017</p>\r\n                          <a class=\"comment-btn\" href=\"#\">\r\n                            <i class=\"fas fa-reply\"></i> Reply\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li>\r\n                  <div class=\"comment\">\r\n                    <div class=\"comment-author\">\r\n                      <img class=\"avatar\" alt=\"\" src=\"assets/img/patients/patient6.jpg\">\r\n                    </div>\r\n                    <div class=\"comment-block\">\r\n                      <span class=\"comment-by\">\r\n                        <span class=\"blog-author-name\">Elsie Gilley</span>\r\n                      </span>\r\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                      <p class=\"blog-date\">December 11, 2017</p>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"comment\">\r\n                    <div class=\"comment-author\">\r\n                      <img class=\"avatar\" alt=\"\" src=\"assets/img/patients/patient7.jpg\">\r\n                    </div>\r\n                    <div class=\"comment-block\">\r\n                      <span class=\"comment-by\">\r\n                        <span class=\"blog-author-name\">Joan Gardner</span>\r\n                      </span>\r\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                      <p class=\"blog-date\">December 13, 2017</p>\r\n                      <a class=\"comment-btn\" href=\"#\">\r\n                        <i class=\"fas fa-reply\"></i> Reply\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card new-comment clearfix\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Leave Comment</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form>\r\n                <div class=\"form-group\">\r\n                  <label>Name <span class=\"text-danger\">*</span></label>\r\n                  <input type=\"text\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Your Email Address <span class=\"text-danger\">*</span></label>\r\n                  <input type=\"email\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Comments</label>\r\n                  <textarea rows=\"4\" class=\"form-control\"></textarea>\r\n                </div>\r\n                <div class=\"submit-section\">\r\n                  <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- Blog Sidebar -->\r\n    <div *ngIf=\"blogs.length !== 0\" class=\"col-lg-4 col-md-12 sidebar-right theiaStickySidebar\">\r\n      <app-blog-sidebar [blogs]=\"blogs\"></app-blog-sidebar>\r\n    </div>\r\n    <!-- /Blog Sidebar -->\r\n  </div>\r\n\r\n</div>\r\n<!-- /Page Content -->","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Blog } from 'src/app/shared/models/blog';\r\nimport { MainService } from 'src/app/shared/services/main.service';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n  public blog!: Blog;\r\n  @Input() blogs: Blog[] = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private main: MainService,\r\n    private router: Router\r\n  ) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.apiResponse();\r\n  }\r\n\r\n  private apiResponse() {\r\n    const slug: any = this.route.snapshot.paramMap.get('slug');\r\n    this.main.getBlog(slug).forEach((response) => (this.blog = response));\r\n  }\r\n}\r\n","import { Injectable, ɵɵdefineInjectable, forwardRef, EventEmitter, Component, ElementRef, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides default values for Pagination and pager components\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = function (a0, a1) { return { \"pull-left\": a0, \"float-left\": a1 }; };\nconst _c1 = function (a0, a1) { return { \"pull-right\": a0, \"float-right\": a1 }; };\nconst _c2 = function (a0, a1) { return { disabled: a0, currentPage: a1 }; };\nfunction PaginationComponent_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 11);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_1_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.selectPage(1, $event); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    const _r11 = ɵngcc0.ɵɵreference(13);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r0.noPrevious() || ctx_r0.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.customFirstTemplate || _r11)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r0.noPrevious() || ctx_r0.disabled, ctx_r0.page));\n} }\nfunction PaginationComponent_li_2_Template(rf, ctx) { if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_2_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.selectPage(ctx_r17.page - 1, $event); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    const _r9 = ɵngcc0.ɵɵreference(11);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.noPrevious() || ctx_r1.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customPreviousTemplate || _r9)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r1.noPrevious() || ctx_r1.disabled, ctx_r1.page));\n} }\nconst _c3 = function (a0, a1, a2) { return { disabled: a0, $implicit: a1, currentPage: a2 }; };\nfunction PaginationComponent_li_3_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_3_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const pg_r19 = ctx.$implicit; const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.selectPage(pg_r19.number, $event); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pg_r19 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    const _r5 = ɵngcc0.ɵɵreference(7);\n    ɵngcc0.ɵɵclassProp(\"active\", pg_r19.active)(\"disabled\", ctx_r2.disabled && !pg_r19.active);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customPageTemplate || _r5)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(6, _c3, ctx_r2.disabled, pg_r19, ctx_r2.page));\n} }\nfunction PaginationComponent_li_4_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_4_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.selectPage(ctx_r22.page + 1, $event); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    const _r7 = ɵngcc0.ɵɵreference(9);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r3.noNext() || ctx_r3.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.customNextTemplate || _r7)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r3.noNext() || ctx_r3.disabled, ctx_r3.page));\n} }\nfunction PaginationComponent_li_5_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.selectPage(ctx_r24.totalPages, $event); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    const _r13 = ɵngcc0.ɵɵreference(15);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r4.noNext() || ctx_r4.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.customLastTemplate || _r13)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r4.noNext() || ctx_r4.disabled, ctx_r4.page));\n} }\nfunction PaginationComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const page_r26 = ctx.$implicit;\n    ɵngcc0.ɵɵtextInterpolate(page_r26.text);\n} }\nfunction PaginationComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.getText(\"next\"));\n} }\nfunction PaginationComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10.getText(\"previous\"));\n} }\nfunction PaginationComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r12.getText(\"first\"));\n} }\nfunction PaginationComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.getText(\"last\"));\n} }\nclass PaginationConfig {\n    constructor() {\n        this.main = {\n            maxSize: void 0,\n            itemsPerPage: 10,\n            boundaryLinks: false,\n            directionLinks: true,\n            firstText: 'First',\n            previousText: 'Previous',\n            nextText: 'Next',\n            lastText: 'Last',\n            pageBtnClass: '',\n            rotate: true\n        };\n        this.pager = {\n            itemsPerPage: 15,\n            previousText: '« Previous',\n            nextText: 'Next »',\n            pageBtnClass: '',\n            align: true\n        };\n    }\n}\nPaginationConfig.ɵfac = function PaginationConfig_Factory(t) { return new (t || PaginationConfig)(); };\n/** @nocollapse */ PaginationConfig.ɵprov = ɵɵdefineInjectable({ factory: function PaginationConfig_Factory() { return new PaginationConfig(); }, token: PaginationConfig, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    PaginationConfig.prototype.main;\n    /** @type {?} */\n    PaginationConfig.prototype.pager;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => PagerComponent)),\n    multi: true\n};\nclass PagerComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} paginationConfig\n     * @param {?} changeDetection\n     */\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /**\n         * fired when total pages count changes, $event:number equals to total pages count\n         */\n        this.numPages = new EventEmitter();\n        /**\n         * fired when page was changed, $event:{page, itemsPerPage} equals to\n         * object with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n        }\n    }\n    /**\n     * maximum number of items per page. If value less than 1 will display all items on one page\n     * @return {?}\n     */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * total number of items in all pages\n     * @return {?}\n     */\n    get totalItems() {\n        return this._totalItems;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * @return {?}\n     */\n    get totalPages() {\n        return this._totalPages;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        /** @type {?} */\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    getText(key) {\n        // tslint:disable-next-line:no-any\n        return ((/** @type {?} */ (this)))[`${key}Text`] || ((/** @type {?} */ (this))).config[`${key}Text`];\n    }\n    /**\n     * @return {?}\n     */\n    noPrevious() {\n        return this.page === 1;\n    }\n    /**\n     * @return {?}\n     */\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // tslint:disable-next-line:no-any\n                /** @type {?} */\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getPages(currentPage, totalPages) {\n        /** @type {?} */\n        const pages = [];\n        // Default page limits\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = totalPages;\n        /** @type {?} */\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            /** @type {?} */\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                /** @type {?} */\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                /** @type {?} */\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    calculateTotalPages() {\n        /** @type {?} */\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PaginationConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nPagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"pager\"]], inputs: { itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\", maxSize: \"maxSize\", rotate: \"rotate\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", pageBtnClass: \"pageBtnClass\", align: \"align\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", disabled: \"disabled\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([PAGER_CONTROL_VALUE_ACCESSOR])], decls: 7, vars: 24, consts: [[1, \"pager\"], [3, \"ngClass\"], [\"href\", \"\", 3, \"click\"]], template: function PagerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"li\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"a\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_2_listener($event) { return ctx.selectPage(ctx.page - 1, $event); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"li\", 1);\n        ɵngcc0.ɵɵelementStart(5, \"a\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_5_listener($event) { return ctx.selectPage(ctx.page + 1, $event); });\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMap(ctx.pageBtnClass);\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.noPrevious())(\"previous\", ctx.align);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(18, _c0, ctx.align, ctx.align));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.getText(\"previous\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMap(ctx.pageBtnClass);\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.noNext())(\"next\", ctx.align);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(21, _c1, ctx.align, ctx.align));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.getText(\"next\"));\n    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });\n/** @nocollapse */\nPagerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: PaginationConfig },\n    { type: ChangeDetectorRef }\n];\nPagerComponent.propDecorators = {\n    align: [{ type: Input }],\n    maxSize: [{ type: Input }],\n    boundaryLinks: [{ type: Input }],\n    directionLinks: [{ type: Input }],\n    firstText: [{ type: Input }],\n    previousText: [{ type: Input }],\n    nextText: [{ type: Input }],\n    lastText: [{ type: Input }],\n    rotate: [{ type: Input }],\n    pageBtnClass: [{ type: Input }],\n    disabled: [{ type: Input }],\n    numPages: [{ type: Output }],\n    pageChanged: [{ type: Output }],\n    itemsPerPage: [{ type: Input }],\n    totalItems: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PagerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'pager',\n                template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\",\n                providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: PaginationConfig }, { type: ɵngcc0.ChangeDetectorRef }]; }, { numPages: [{\n            type: Output\n        }], pageChanged: [{\n            type: Output\n        }], itemsPerPage: [{\n            type: Input\n        }], totalItems: [{\n            type: Input\n        }], maxSize: [{\n            type: Input\n        }], rotate: [{\n            type: Input\n        }], boundaryLinks: [{\n            type: Input\n        }], directionLinks: [{\n            type: Input\n        }], pageBtnClass: [{\n            type: Input\n        }], align: [{\n            type: Input\n        }], firstText: [{\n            type: Input\n        }], previousText: [{\n            type: Input\n        }], nextText: [{\n            type: Input\n        }], lastText: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    PagerComponent.prototype.config;\n    /**\n     * if `true` aligns each link to the sides of pager\n     * @type {?}\n     */\n    PagerComponent.prototype.align;\n    /**\n     * limit number for page links in pager\n     * @type {?}\n     */\n    PagerComponent.prototype.maxSize;\n    /**\n     * if false first and last buttons will be hidden\n     * @type {?}\n     */\n    PagerComponent.prototype.boundaryLinks;\n    /**\n     * if false previous and next buttons will be hidden\n     * @type {?}\n     */\n    PagerComponent.prototype.directionLinks;\n    /**\n     * first button text\n     * @type {?}\n     */\n    PagerComponent.prototype.firstText;\n    /**\n     * previous button text\n     * @type {?}\n     */\n    PagerComponent.prototype.previousText;\n    /**\n     * next button text\n     * @type {?}\n     */\n    PagerComponent.prototype.nextText;\n    /**\n     * last button text\n     * @type {?}\n     */\n    PagerComponent.prototype.lastText;\n    /**\n     * if true current page will in the middle of pages list\n     * @type {?}\n     */\n    PagerComponent.prototype.rotate;\n    /**\n     * add class to <code><li\\></code>\n     * @type {?}\n     */\n    PagerComponent.prototype.pageBtnClass;\n    /**\n     * if true pagination component will be disabled\n     * @type {?}\n     */\n    PagerComponent.prototype.disabled;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     * @type {?}\n     */\n    PagerComponent.prototype.numPages;\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to\n     * object with current page index and number of items per page\n     * @type {?}\n     */\n    PagerComponent.prototype.pageChanged;\n    /** @type {?} */\n    PagerComponent.prototype.onChange;\n    /** @type {?} */\n    PagerComponent.prototype.onTouched;\n    /** @type {?} */\n    PagerComponent.prototype.classMap;\n    /** @type {?} */\n    PagerComponent.prototype.pages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._itemsPerPage;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._totalItems;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._totalPages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype.inited;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._page;\n    /**\n     * @type {?}\n     * @private\n     */\n    PagerComponent.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PagerComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction PageChangedEvent() { }\nif (false) {\n    /** @type {?} */\n    PageChangedEvent.prototype.itemsPerPage;\n    /** @type {?} */\n    PageChangedEvent.prototype.page;\n}\n/** @type {?} */\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => PaginationComponent)),\n    multi: true\n};\nclass PaginationComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} paginationConfig\n     * @param {?} changeDetection\n     */\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /**\n         * fired when total pages count changes, $event:number equals to total pages count\n         */\n        this.numPages = new EventEmitter();\n        /**\n         * fired when page was changed, $event:{page, itemsPerPage} equals to object\n         * with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(paginationConfig.main);\n        }\n    }\n    /**\n     * maximum number of items per page. If value less than 1 will display all items on one page\n     * @return {?}\n     */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * total number of items in all pages\n     * @return {?}\n     */\n    get totalItems() {\n        return this._totalItems;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * @return {?}\n     */\n    get totalPages() {\n        return this._totalPages;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        /** @type {?} */\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    getText(key) {\n        // tslint:disable-next-line:no-any\n        return ((/** @type {?} */ (this)))[`${key}Text`] || ((/** @type {?} */ (this))).config[`${key}Text`];\n    }\n    /**\n     * @return {?}\n     */\n    noPrevious() {\n        return this.page === 1;\n    }\n    /**\n     * @return {?}\n     */\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // tslint:disable-next-line:no-any\n                /** @type {?} */\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getPages(currentPage, totalPages) {\n        /** @type {?} */\n        const pages = [];\n        // Default page limits\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = totalPages;\n        /** @type {?} */\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            /** @type {?} */\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                /** @type {?} */\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                /** @type {?} */\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    calculateTotalPages() {\n        /** @type {?} */\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n}\nPaginationComponent.ɵfac = function PaginationComponent_Factory(t) { return new (t || PaginationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PaginationConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nPaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PaginationComponent, selectors: [[\"pagination\"]], inputs: { itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\", maxSize: \"maxSize\", rotate: \"rotate\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", pageBtnClass: \"pageBtnClass\", align: \"align\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", disabled: \"disabled\", customPageTemplate: \"customPageTemplate\", customNextTemplate: \"customNextTemplate\", customPreviousTemplate: \"customPreviousTemplate\", customFirstTemplate: \"customFirstTemplate\", customLastTemplate: \"customLastTemplate\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([PAGINATION_CONTROL_VALUE_ACCESSOR])], decls: 16, vars: 6, consts: [[1, \"pagination\", 3, \"ngClass\"], [\"class\", \"pagination-first page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-prev page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-page page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pagination-next page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-last page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"defaultPageTemplate\", \"\"], [\"defaultNextTemplate\", \"\"], [\"defaultPreviousTemplate\", \"\"], [\"defaultFirstTemplate\", \"\"], [\"defaultLastTemplate\", \"\"], [1, \"pagination-first\", \"page-item\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"pagination-prev\", \"page-item\"], [1, \"pagination-page\", \"page-item\"], [1, \"pagination-next\", \"page-item\"], [1, \"pagination-last\", \"page-item\"]], template: function PaginationComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, PaginationComponent_li_1_Template, 3, 7, \"li\", 1);\n        ɵngcc0.ɵɵtemplate(2, PaginationComponent_li_2_Template, 3, 7, \"li\", 2);\n        ɵngcc0.ɵɵtemplate(3, PaginationComponent_li_3_Template, 3, 10, \"li\", 3);\n        ɵngcc0.ɵɵtemplate(4, PaginationComponent_li_4_Template, 3, 7, \"li\", 4);\n        ɵngcc0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 7, \"li\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, PaginationComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(8, PaginationComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(10, PaginationComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(12, PaginationComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(14, PaginationComponent_ng_template_14_Template, 1, 1, \"ng-template\", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.classMap);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });\n/** @nocollapse */\nPaginationComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: PaginationConfig },\n    { type: ChangeDetectorRef }\n];\nPaginationComponent.propDecorators = {\n    align: [{ type: Input }],\n    maxSize: [{ type: Input }],\n    boundaryLinks: [{ type: Input }],\n    directionLinks: [{ type: Input }],\n    firstText: [{ type: Input }],\n    previousText: [{ type: Input }],\n    nextText: [{ type: Input }],\n    lastText: [{ type: Input }],\n    rotate: [{ type: Input }],\n    pageBtnClass: [{ type: Input }],\n    disabled: [{ type: Input }],\n    customPageTemplate: [{ type: Input }],\n    customNextTemplate: [{ type: Input }],\n    customPreviousTemplate: [{ type: Input }],\n    customFirstTemplate: [{ type: Input }],\n    customLastTemplate: [{ type: Input }],\n    numPages: [{ type: Output }],\n    pageChanged: [{ type: Output }],\n    itemsPerPage: [{ type: Input }],\n    totalItems: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationComponent, [{\n        type: Component,\n        args: [{\n                selector: 'pagination',\n                template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\",\n                providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: PaginationConfig }, { type: ɵngcc0.ChangeDetectorRef }]; }, { numPages: [{\n            type: Output\n        }], pageChanged: [{\n            type: Output\n        }], itemsPerPage: [{\n            type: Input\n        }], totalItems: [{\n            type: Input\n        }], maxSize: [{\n            type: Input\n        }], rotate: [{\n            type: Input\n        }], boundaryLinks: [{\n            type: Input\n        }], directionLinks: [{\n            type: Input\n        }], pageBtnClass: [{\n            type: Input\n        }], align: [{\n            type: Input\n        }], firstText: [{\n            type: Input\n        }], previousText: [{\n            type: Input\n        }], nextText: [{\n            type: Input\n        }], lastText: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], customPageTemplate: [{\n            type: Input\n        }], customNextTemplate: [{\n            type: Input\n        }], customPreviousTemplate: [{\n            type: Input\n        }], customFirstTemplate: [{\n            type: Input\n        }], customLastTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    PaginationComponent.prototype.config;\n    /**\n     * if `true` aligns each link to the sides of pager\n     * @type {?}\n     */\n    PaginationComponent.prototype.align;\n    /**\n     * limit number for page links in pager\n     * @type {?}\n     */\n    PaginationComponent.prototype.maxSize;\n    /**\n     * if false first and last buttons will be hidden\n     * @type {?}\n     */\n    PaginationComponent.prototype.boundaryLinks;\n    /**\n     * if false previous and next buttons will be hidden\n     * @type {?}\n     */\n    PaginationComponent.prototype.directionLinks;\n    /**\n     * first button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.firstText;\n    /**\n     * previous button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.previousText;\n    /**\n     * next button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.nextText;\n    /**\n     * last button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.lastText;\n    /**\n     * if true current page will in the middle of pages list\n     * @type {?}\n     */\n    PaginationComponent.prototype.rotate;\n    /**\n     * add class to <code><li\\></code>\n     * @type {?}\n     */\n    PaginationComponent.prototype.pageBtnClass;\n    /**\n     * if true pagination component will be disabled\n     * @type {?}\n     */\n    PaginationComponent.prototype.disabled;\n    /**\n     * custom template for page link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customPageTemplate;\n    /**\n     * custom template for next link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customNextTemplate;\n    /**\n     * custom template for previous link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customPreviousTemplate;\n    /**\n     * custom template for first link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customFirstTemplate;\n    /**\n     * custom template for last link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customLastTemplate;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     * @type {?}\n     */\n    PaginationComponent.prototype.numPages;\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to object\n     * with current page index and number of items per page\n     * @type {?}\n     */\n    PaginationComponent.prototype.pageChanged;\n    /** @type {?} */\n    PaginationComponent.prototype.onChange;\n    /** @type {?} */\n    PaginationComponent.prototype.onTouched;\n    /** @type {?} */\n    PaginationComponent.prototype.classMap;\n    /** @type {?} */\n    PaginationComponent.prototype.pages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._itemsPerPage;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._totalItems;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._totalPages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype.inited;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._page;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaginationComponent.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaginationComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PaginationModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: PaginationModule, providers: [] };\n    }\n}\nPaginationModule.ɵfac = function PaginationModule_Factory(t) { return new (t || PaginationModule)(); };\nPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PaginationModule });\nPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PaginationModule, { declarations: function () { return [PagerComponent, PaginationComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [PagerComponent, PaginationComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [PagerComponent, PaginationComponent],\n                exports: [PagerComponent, PaginationComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule, PAGER_CONTROL_VALUE_ACCESSOR as ɵa, PAGINATION_CONTROL_VALUE_ACCESSOR as ɵb };\n\n//# sourceMappingURL=ngx-bootstrap-pagination.js.map","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'urlSanitizer',\r\n})\r\nexport class UrlSanitizerPipe implements PipeTransform {\r\n  public urlSafe!: SafeResourceUrl;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  transform(url: any) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}\r\n","<app-main-breadcrumb [title]=\"'Blog List'\"></app-main-breadcrumb>\r\n<!-- Page Content -->\r\n<div class=\"content\">\r\n  <div class=\"container\">\r\n    <div class=\"row\" *ngIf=\"blogs.length !== 0\">\r\n      <div class=\"col-lg-8 col-md-12\">\r\n        <!-- Blog Post -->\r\n        <div class=\"blog\" *ngFor=\"let item of blogs\">\r\n          <div class=\"blog-image\">\r\n            <div class=\"video\">\r\n              <iframe\r\n                [src]=\"item.video | urlSanitizer\"\r\n                width=\"940\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n          <h3 class=\"blog-title\">\r\n            <a [routerLink]=\"['/main/blog/details', item.slug]\">{{\r\n              item.title\r\n            }}</a>\r\n          </h3>\r\n          <div class=\"blog-info clearfix\">\r\n            <div class=\"post-left\">\r\n              <ul>\r\n                <li>\r\n                  <div class=\"post-author\">\r\n                    <a\r\n                      [routerLink]=\"[\r\n                        '/main/patient/doctor-profile',\r\n                        item.doctor?.slug\r\n                      ]\"\r\n                      ><img\r\n                        src=\"{{ item.doctor?.photo }}\"\r\n                        alt=\"{{ item.doctor?.fullname }}\"\r\n                      />\r\n                      <span>Dr. {{ item.doctor?.fullname }}</span></a\r\n                    >\r\n                  </div>\r\n                </li>\r\n                <li><i class=\"far fa-clock\"></i>3 Dec 2019</li>\r\n                <li><i class=\"far fa-comments\"></i>2 Comments</li>\r\n                <li><i class=\"fa fa-tags\"></i>Health Care</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div #blog_description class=\"blog-content\" id={{item.slug}}>\r\n            <a\r\n              [routerLink]=\"['/main/blog/details', item.slug]\"\r\n              class=\"read-more\"\r\n              >Read More</a\r\n            >\r\n          </div>\r\n        </div>\r\n        <!-- /Blog Post -->\r\n\r\n        <!-- Blog Pagination -->\r\n        <div class=\"row\" *ngIf=\"pagination != null || pagination !== undefined\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"blog-pagination\">\r\n              <nav>\r\n                <pagination\r\n                  [boundaryLinks]=\"true\"\r\n                  [totalItems]=\"pagination.totalItems\"\r\n                  [itemsPerPage]=\"pagination.itemsPerPage\"\r\n                  (pageChanged)=\"pageChanged($event)\"\r\n                  previousText=\"&lsaquo;\"\r\n                  nextText=\"&rsaquo;\"\r\n                  firstText=\"&laquo;\"\r\n                  lastText=\"&raquo;\"\r\n                >\r\n                </pagination>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- /Blog Pagination -->\r\n      </div>\r\n      <!-- Blog Sidebar -->\r\n      <div class=\"col-lg-4 col-md-12 sidebar-right theiaStickySidebar\">\r\n        <app-blog-sidebar [blogs]=\"blogs\"></app-blog-sidebar>\r\n      </div>\r\n      <!-- /Blog Sidebar -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- /Page Content -->\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BlogComponent } from './blog.component';\nimport { DetailsComponent } from './details/details.component';\nimport { ListComponent } from './list/list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BlogComponent,\n    children: [\n      { path: 'list', component: ListComponent },\n      { path: 'details/:slug', component: DetailsComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BlogRoutingModule { }\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Blog } from 'src/app/shared/models/blog';\r\nimport { PaginatedResult, Pagination } from 'src/app/shared/models/pagination';\r\nimport { MainService } from 'src/app/shared/services/main.service';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n})\r\nexport class ListComponent implements OnInit {\r\n  @ViewChildren('blog_description') private blogDescription: QueryList<ElementRef>;\r\n  @Input() blogs: Blog[] = [];\r\n  @Input() pagination: Pagination;\r\n\r\n  constructor(private mainService: MainService, private changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.blogs.forEach(x => this.inserHTML(x));\r\n  }\r\n\r\n  public pageChanged(event: any) {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadPage(this.pagination?.currentPage, this.pagination?.itemsPerPage);\r\n  }\r\n\r\n  private loadPage(currentPage: any, itemsPerPage: any) {\r\n    this.mainService\r\n      .getBlogList(currentPage, itemsPerPage)\r\n      .subscribe((response: PaginatedResult<Blog[]>) => {\r\n        this.pagination = response.pagination;\r\n        this.blogs = response.result;\r\n        this.blogs.forEach(x => this.inserHTML(x));\r\n      });\r\n  }\r\n\r\n  private inserHTML(blog: Blog) {\r\n    this.changeDetectorRef.detectChanges();\r\n    const blogDescription: ElementRef[] = this.blogDescription.toArray();\r\n    blogDescription.forEach(desc => {\r\n      const element = desc.nativeElement as HTMLElement;\r\n      if(blog.slug === element.getAttribute('id')) {\r\n        desc.nativeElement.insertAdjacentHTML(\r\n          'afterbegin',\r\n          blog.description.substr(0, 450)\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlogRoutingModule } from './blog-routing.module';\nimport { BlogComponent } from './blog.component';\nimport { ListComponent } from './list/list.component';\nimport { DetailsComponent } from './details/details.component';\nimport { RouterModule } from '@angular/router';\nimport { ComponentsHelperModule } from 'src/app/shared/components/components-helper.module';\nimport { UrlSanitizerPipe } from 'src/app/shared/pipes/url-sanitizer.pipe';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\n@NgModule({\n  declarations: [BlogComponent, ListComponent, DetailsComponent, UrlSanitizerPipe],\n  imports: [\n    CommonModule,\n    BlogRoutingModule,\n    RouterModule,\n    ComponentsHelperModule,\n    PaginationModule.forRoot(),\n  ],\n  exports: [\n    PaginationModule,\n  ],\n})\nexport class BlogModule { }\n"],"sourceRoot":"webpack:///"}