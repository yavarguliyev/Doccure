{"version":3,"sources":["./src/app/shared/components/input-text/input-text.component.ts","./src/app/shared/components/input-text/input-text.component.html"],"names":["InputTextComponent","ngControl","formControl","valueAccessor","this","control","obj","fn","type","value"],"mappings":"2FACA,wE,yBCQE,gBACE,QACF,Q,oBADE,8C,yBAEF,gBACE,QAEF,Q,oBAFE,yK,yBAGF,gBACE,QAEF,Q,oBAFE,wK,sBAGF,gBACE,mCACF,QDfK,IAAD,Q,MAAOA,EAOX,YAA2BC,GAAA,KAAAA,YAFpB,KAAAC,YAAc,IAAI,IAAY,IAGnCD,EAAUE,cAAgBC,KAG5B,kBACEA,KAAKF,YAAcE,KAAKH,UAAUI,QAGpC,WAAWC,IAEX,iBAAiBC,IAEjB,kBAAkBA,K,6CAnBPP,GAAkB,c,uBAAlBA,EAAkB,oRCP/B,gBACE,kBAQA,sBAGA,sBAIA,sBAIA,sBAGF,Q,MArBI,oEACA,cAAAQ,MAGA,4BACA,eAAAC,OAFA,kCAII,0HAGA,2HAIA,2HAIA,8H,kDDbF","file":"common.7d2dcf67d5508dec6bdb.js","sourcesContent":["import { AfterViewInit, Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-text',\n  templateUrl: './input-text.component.html'\n})\nexport class InputTextComponent implements ControlValueAccessor, AfterViewInit {\n  @Input() label!: string;\n  @Input() type!: string;\n  @Input() value!: string;\n\n  public formControl = new FormControl('');\n\n  constructor(@Self() public ngControl: NgControl) {\n    ngControl.valueAccessor = this;\n  }\n\n  ngAfterViewInit(): void {\n    this.formControl = this.ngControl.control as FormControl;\n  }\n\n  writeValue(obj: any): void { }\n\n  registerOnChange(fn: any): void { }\n\n  registerOnTouched(fn: any): void { }\n}\n","<div class=\"form-group\">\n  <input\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    type=\"{{ type }}\"\n    class=\"form-control\"\n    [formControl]=\"formControl\"\n    placeholder=\"{{ label! }}\"\n    value={{value}}\n  />\n  <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">\n    Please enter a {{ label }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.minlength\" class=\"invalid-feedback\">\n    {{ label }} must be at least\n    {{ ngControl.control?.errors?.minlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.maxlength\" class=\"invalid-feedback\">\n    {{ label }} must be at most\n    {{ ngControl.control?.errors?.maxlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.isMatching\" class=\"invalid-feedback\">\n    Passwords do not match\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}