{"version":3,"sources":["./src/app/views/auth/login/login.component.ts","./src/app/views/auth/login/login.component.html","./src/app/views/auth/auth.component.ts","./src/app/views/auth/auth.component.html","./src/app/views/auth/auth.module.ts","./src/app/views/auth/auth-routing.module.ts","./src/app/shared/services/auth-doctor.service.ts","./src/app/shared/enums/gender.enum.ts","./src/app/views/auth/auth-doctor/auth-doctor.component.ts","./src/app/views/auth/auth-doctor/auth-doctor.component.html","./src/app/views/auth/forget-password/forget-password.component.ts","./src/app/views/auth/forget-password/forget-password.component.html","./src/app/views/auth/reset-password/reset-password.component.ts","./src/app/views/auth/reset-password/reset-password.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  public fg: FormGroup = new FormGroup({});\n\n  public returnUrl!: string;\n\n  constructor(\n    private title: Title,\n    private router: Router,\n    private api: AuthService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.title.setTitle('Gambo | Login');\n    this.intitializeForm();\n\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n  }\n\n  intitializeForm() {\n    this.fg = this.fb.group({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n\n  loginSubmit() {\n    const email = this.fg.value.email as string;\n    const password = this.fg.value.password as string;\n\n    this.api.login(email, password).subscribe(() => this.router.navigate([this.returnUrl]));\n  }\n\n  logout(role: string) {\n    const current = localStorage.getItem(role);\n    const user: User = current !== null ? JSON.parse(current) : null;\n    this.api.logout(user);\n  }\n}\n","<h1>Login</h1>\n<p class=\"account-subtitle\">Access to our dashboard</p>\n\n<!-- Form -->\n<form [formGroup]=\"fg\" (ngSubmit)=\"fg.valid && loginSubmit()\" autocomplete=\"off\">\n  <app-input-text  [type]='\"email\"' [label]='\"Email\"' [formControlName]='\"email\"'></app-input-text>\n  <app-input-text  [type]='\"password\"' [label]='\"Password\"' [formControlName]='\"password\"'></app-input-text>\n  <div class=\"form-group\">\n    <button [disabled]=\"!fg.valid\" class=\"btn btn-primary btn-block\" type=\"submit\">\n      Login\n    </button>\n  </div>\n</form>\n<!-- /Form -->\n\n<div class=\"text-center forgotpass\">\n  <a [routerLink]=\"['/auth/forget-password']\">Forgot Password?</a>\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<!-- Main Wrapper -->\n<div class=\"main-wrapper login-body\">\n  <div class=\"login-wrapper\">\n    <div class=\"container\">\n      <div class=\"loginbox\">\n        <div class=\"login-left\">\n          <img class=\"img-fluid\" src=\"assets/img/logo-white.png\" alt=\"Logo\" />\n        </div>\n        <div class=\"login-right\">\n          <div class=\"login-right-wrap\">\n            <router-outlet></router-outlet>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- /Main Wrapper -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ComponentsHelperModule } from 'src/app/shared/components/components-helper.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthDoctorComponent } from './auth-doctor/auth-doctor.component';\n\n@NgModule({\n  declarations: [AuthComponent, LoginComponent, ForgetPasswordComponent, ResetPasswordComponent, AuthDoctorComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ComponentsHelperModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthDoctorComponent } from './auth-doctor/auth-doctor.component';\nimport { AuthComponent } from './auth.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'doctor-register/:token', component: AuthDoctorComponent },\n      { path: 'forget-password', component: ForgetPasswordComponent },\n      { path: 'reset-password/:token', component: ResetPasswordComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User, UserFormValues } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthDoctorService {\n  private baseUrl = environment.api;\n\n  constructor(private http: HttpClient) { }\n\n  public checkUser(token: string) {\n    return this.http.get(`${this.baseUrl}/doctor/${token}`);\n  }\n\n  public register(token: string, userForm: UserFormValues) {\n    return this.http\n      .put<User>(`${this.baseUrl}/doctor?token=${token}`, userForm)\n      .pipe(map((user) => user));\n  }\n}\n","export enum Gender {\n  select = 'Select',\n  male = 'Male',\n  female = 'Female'\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Gender } from 'src/app/shared/enums/gender.enum';\nimport { AuthDoctorService } from 'src/app/shared/services/auth-doctor.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { ToastrService } from 'src/app/shared/services/toastr.service';\n\n@Component({\n  selector: 'app-auth-doctor',\n  templateUrl: './auth-doctor.component.html',\n})\nexport class AuthDoctorComponent implements OnInit {\n  private token!: string;\n\n  public fg: FormGroup = new FormGroup({});\n  public maxDate!: Date;\n  public gender = Gender;\n\n  constructor(\n    private title: Title,\n    private api: AuthService,\n    private authDoctorService: AuthDoctorService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.title.setTitle('Doccure | Doctor Register');\n    this.checkRouter();\n    this.intitializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  intitializeForm() {\n    this.fg = this.fb.group({\n      fullname: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      birth: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl('', Validators.required),\n    });\n  }\n\n  checkRouter() {\n    const token = this.route.snapshot.paramMap.get('token');\n    token ? (this.token = token) : (this.token = '');\n\n    this.authDoctorService.checkUser(this.token).subscribe((res) => res);\n  }\n\n  registerSubmit() {\n    this.authDoctorService.register(this.token, this.fg.value).subscribe(\n      (response) => {\n        this.toastr.success(response.message, 'Success');\n      },\n      (error) => {}\n    );\n  }\n}\n","<h1>Register</h1>\n<p class=\"account-subtitle\">Access to our dashboard</p>\n\n<!-- Form -->\n<form [formGroup]=\"fg\" (ngSubmit)=\"fg.valid && registerSubmit()\" autocomplete=\"off\">\n  <app-input-text  [type]='\"text\"' [label]='\"Fullname\"' [formControlName]='\"fullname\"'></app-input-text>\n  <app-input-select [formControlName]=\"'gender'\" [values]=\"gender\"></app-input-select>\n  <app-input-date  [label]=\"'Birth'\" [formControlName]=\"'birth'\" [maxDate]='maxDate'></app-input-date>\n  <app-input-text  [type]='\"password\"' [label]='\"Password\"' [formControlName]='\"password\"'></app-input-text>\n  <app-input-text  [type]='\"password\"' [label]='\"Confirm Password\"' [formControlName]='\"confirmPassword\"'></app-input-text>\n  <div class=\"form-group\">\n    <button [disabled]=\"!fg.valid\" class=\"btn btn-primary btn-block\" type=\"submit\">\n      Register\n    </button>\n  </div>\n</form>\n<!-- /Form -->\n\n<div class=\"login-or\">\n  <span class=\"or-line\"></span>\n  <span class=\"span-or\">or</span>\n</div>\n\n<div class=\"text-center dont-have\">\n  Already have an account? <a [routerLink]=\"['/auth/login']\">Login</a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html'\n})\nexport class ForgetPasswordComponent implements OnInit {\n  public fg: FormGroup = new FormGroup({});\n  public validationErrors: string[] = [];\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.intitializeForm();\n  }\n\n  intitializeForm() {\n    this.fg = this.fb.group({\n      email: new FormControl('', Validators.required),\n    });\n  }\n\n  forgetPasswordSubmit() {\n    console.log(this.fg.value);\n  }\n}\n","<h1>Forgot Password?</h1>\r\n<p class=\"account-subtitle\">Enter your email to get a password reset link</p>\r\n\r\n<!-- Form -->\r\n<form [formGroup]=\"fg\" (ngSubmit)=\"fg.valid && forgetPasswordSubmit()\" autocomplete=\"off\">\r\n  <app-input-text  [type]='\"email\"' [label]='\"Email\"' [formControlName]='\"email\"'></app-input-text>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"!fg.valid\" class=\"btn btn-primary btn-block\" type=\"submit\">\r\n      Send Email\r\n    </button>\r\n  </div>\r\n</form>\r\n<!-- /Form -->\r\n\r\n<div class=\"login-or\">\r\n  <span class=\"or-line\"></span>\r\n  <span class=\"span-or\">or</span>\r\n</div>\r\n\r\n<div class=\"text-center dont-have\">\r\n  Remember your password? <a [routerLink]=\"['/auth/login']\">Login</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html'\n})\nexport class ResetPasswordComponent implements OnInit {\n  public fg: FormGroup = new FormGroup({});\n  public validationErrors: string[] = [];\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.intitializeForm();\n  }\n\n  intitializeForm() {\n    this.fg = this.fb.group({\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl('', Validators.required)\n    });\n  }\n\n  resetPasswordSubmit() {\n    console.log(this.fg.value);\n  }\n}\n","<h1>Reset Password</h1>\r\n<p class=\"account-subtitle\">Access to our dashboard</p>\r\n\r\n<!-- Form -->\r\n<form [formGroup]=\"fg\" (ngSubmit)=\"fg.valid && resetPasswordSubmit()\" autocomplete=\"off\">\r\n  <app-input-text  [type]='\"password\"' [label]='\"Password\"' [formControlName]='\"password\"'></app-input-text>\r\n  <app-input-text  [type]='\"password\"' [label]='\"Confirm Password\"' [formControlName]='\"confirmPassword\"'></app-input-text>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"!fg.valid\" class=\"btn btn-primary btn-block\" type=\"submit\">\r\n      Reset Password\r\n    </button>\r\n  </div>\r\n</form>\r\n<!-- /Form -->"],"sourceRoot":"webpack:///"}