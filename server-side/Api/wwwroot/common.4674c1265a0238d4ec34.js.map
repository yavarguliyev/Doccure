{"version":3,"sources":["./src/app/shared/components/input-text/input-text.component.ts","./src/app/shared/components/input-text/input-text.component.html"],"names":["InputTextComponent","ngControl","formControl","valueAccessor","this","control","obj","fn","type","value"],"mappings":"2FACA,wE,yBCQE,gBACE,QACF,Q,oBADE,8C,yBAEF,gBACE,QAEF,Q,oBAFE,yK,yBAGF,gBACE,QAEF,Q,oBAFE,wK,sBAGF,gBACE,mCACF,QDfK,IAAD,Q,MAAOA,EAOX,YAA2BC,GAAA,KAAAA,YAFpB,KAAAC,YAAc,IAAI,IAAY,IAGnCD,EAAUE,cAAgBC,KAG5B,kBACEA,KAAKF,YAAcE,KAAKH,UAAUI,QAGpC,WAAWC,IAEX,iBAAiBC,IAEjB,kBAAkBA,K,6CAnBPP,GAAkB,c,uBAAlBA,EAAkB,oRCP/B,gBACE,kBAQA,sBAGA,sBAIA,sBAIA,sBAGF,Q,MArBI,oEACA,cAAAQ,MAGA,4BACA,eAAAC,OAFA,kCAII,0HAGA,2HAIA,2HAIA,8H,kDDbF","file":"common.4674c1265a0238d4ec34.js","sourcesContent":["import { AfterViewInit, Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-input-text',\r\n  templateUrl: './input-text.component.html'\r\n})\r\nexport class InputTextComponent implements ControlValueAccessor, AfterViewInit {\r\n  @Input() label!: string;\r\n  @Input() type!: string;\r\n  @Input() value!: string;\r\n\r\n  public formControl = new FormControl('');\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    ngControl.valueAccessor = this;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.formControl = this.ngControl.control as FormControl;\r\n  }\r\n\r\n  writeValue(obj: any): void { }\r\n\r\n  registerOnChange(fn: any): void { }\r\n\r\n  registerOnTouched(fn: any): void { }\r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    type=\"{{ type }}\"\r\n    class=\"form-control\"\r\n    [formControl]=\"formControl\"\r\n    placeholder=\"{{ label! }}\"\r\n    value={{value}}\r\n  />\r\n  <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">\r\n    Please enter a {{ label }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control?.errors?.minlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at least\r\n    {{ ngControl.control?.errors?.minlength[\"requiredLength\"] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control?.errors?.maxlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at most\r\n    {{ ngControl.control?.errors?.maxlength[\"requiredLength\"] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control?.errors?.isMatching\" class=\"invalid-feedback\">\r\n    Passwords do not match\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}